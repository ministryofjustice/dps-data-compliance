spring:

  application:
    name: dps-data-compliance

  security:
    oauth2:
      client:
        registration:
          dps-data-compliance:
            provider: nomis-oauth2-server
            client-id: ${dps.data.compliance.client.id}
            client-secret: ${dps.data.compliance.client.secret}
            authorization-grant-type: client_credentials
        provider:
          nomis-oauth2-server:
            token-uri: ${oauth.api.base.url}/oauth/token

  flyway.locations: classpath:db/migration,classpath:db/quartz

  datasource:
    url: ${app.db.url}
    username: sa
    password:
    continueOnError: true

    hikari:
      pool-name: DPS-Data-Compliance-CP
      connectionTimeout: 1000
      validationTimeout:  500

  quartz:
    job-store-type: jdbc
    properties.org.quartz:
      threadPool.threadCount: 5
      jobStore:
        isClustered: true
        class: org.quartz.impl.jdbcjobstore.JobStoreTX
        driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
        tablePrefix: QRTZ_
      scheduler.instanceId: AUTO
      scheduler.instanceName: data-compliance-quartz

image.recognition:
  region: eu-west-2
  aws.collection.id: dps-offender-images

outbound.deletion.sqs.region: eu-west-2
inbound.referral.sqs.region: eu-west-2

server:
  port: 8080
  servlet:
    context-path: /
  forward-headers-strategy: native
  tomcat:
    remote-ip-header: x-forwarded-for
    protocol_header: x-forwarded-proto

management:
  endpoints:
    web:
      base-path: /
      exposure:
        include: 'info, health'
  endpoint:
    health:
      cache:
        time-to-live: 2000ms
      show-components: always
      show-details: always
    info:
      cache:
        time-to-live: 2000ms

graceful:
  shutdown:
    enabled: true
