DROP TABLE IF EXISTS IMAGE_DUPLICATE;

CREATE TABLE IMAGE_DUPLICATE
(
  IMAGE_DUPLICATE_ID              BIGSERIAL       NOT NULL,
  REFERENCE_OFFENDER_UPLOAD_ID    BIGINT          NOT NULL,
  DUPLICATE_OFFENDER_UPLOAD_ID    BIGINT          NOT NULL,
  DETECTION_DATE_TIME             TIMESTAMP       NOT NULL,

  CONSTRAINT IMG_DUP_PK           PRIMARY KEY (IMAGE_DUPLICATE_ID),
  CONSTRAINT IMG_DUP_ROUI_FK      FOREIGN KEY (REFERENCE_OFFENDER_UPLOAD_ID) REFERENCES OFFENDER_IMAGE_UPLOAD(UPLOAD_ID),
  CONSTRAINT IMG_DUP_DOUI_FK      FOREIGN KEY (DUPLICATE_OFFENDER_UPLOAD_ID) REFERENCES OFFENDER_IMAGE_UPLOAD(UPLOAD_ID)
);

COMMENT ON TABLE IMAGE_DUPLICATE IS 'Records links between uploaded offender images where they are thought to be the same person';

COMMENT ON COLUMN IMAGE_DUPLICATE.IMAGE_DUPLICATE_ID IS 'Primary key id';
COMMENT ON COLUMN IMAGE_DUPLICATE.REFERENCE_OFFENDER_UPLOAD_ID IS 'The id of the first offender image upload in the pair';
COMMENT ON COLUMN IMAGE_DUPLICATE.DUPLICATE_OFFENDER_UPLOAD_ID IS 'The id of the second offender image upload in the pair';
COMMENT ON COLUMN IMAGE_DUPLICATE.DETECTION_DATE_TIME IS 'The timestamp of when the duplicate was detected';

CREATE INDEX IMG_DUP_ROUI_IDX ON IMAGE_DUPLICATE(REFERENCE_OFFENDER_UPLOAD_ID);
CREATE INDEX IMG_DUP_DOUI_IDX ON IMAGE_DUPLICATE(DUPLICATE_OFFENDER_UPLOAD_ID);
